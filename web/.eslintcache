[{"D:\\Syncro\\Zeitplan\\web\\src\\index.tsx":"1","D:\\Syncro\\Zeitplan\\web\\src\\App.tsx":"2","D:\\Syncro\\Zeitplan\\web\\src\\Routes\\index.tsx":"3","D:\\Syncro\\Zeitplan\\web\\src\\pages\\Home\\index.tsx":"4","D:\\Syncro\\Zeitplan\\web\\src\\pages\\Home\\styles.ts":"5","D:\\Syncro\\Zeitplan\\web\\src\\styles\\globaStyle.ts":"6","D:\\Syncro\\Zeitplan\\web\\src\\components\\InputText\\index.tsx":"7","D:\\Syncro\\Zeitplan\\web\\src\\components\\InputText\\styles.ts":"8","D:\\Syncro\\Zeitplan\\web\\src\\components\\Login\\index.tsx":"9","D:\\Syncro\\Zeitplan\\web\\src\\components\\Login\\styles.ts":"10","D:\\Syncro\\Zeitplan\\web\\src\\components\\Register\\index.tsx":"11","D:\\Syncro\\Zeitplan\\web\\src\\components\\Register\\styles.ts":"12","D:\\Syncro\\Zeitplan\\web\\src\\services\\api.ts":"13","D:\\Syncro\\Zeitplan\\web\\src\\Routes\\AlteredRoute.tsx":"14","D:\\Syncro\\Zeitplan\\web\\src\\hooks\\auth.tsx":"15","D:\\Syncro\\Zeitplan\\web\\src\\hooks\\index.tsx":"16","D:\\Syncro\\Zeitplan\\web\\src\\pages\\Dashboard\\index.tsx":"17","D:\\Syncro\\Zeitplan\\web\\src\\pages\\Dashboard\\styles.ts":"18","D:\\Syncro\\Zeitplan\\web\\src\\components\\Menu\\index.tsx":"19","D:\\Syncro\\Zeitplan\\web\\src\\components\\Menu\\styles.ts":"20","D:\\Syncro\\Zeitplan\\web\\src\\pages\\Movies\\index.tsx":"21","D:\\Syncro\\Zeitplan\\web\\src\\pages\\Movies\\styles.ts":"22","D:\\Syncro\\Zeitplan\\web\\src\\pages\\Profile\\index.tsx":"23","D:\\Syncro\\Zeitplan\\web\\src\\pages\\Profile\\styles.ts":"24","D:\\Syncro\\Zeitplan\\web\\src\\components\\ShowProfile\\index.tsx":"25","D:\\Syncro\\Zeitplan\\web\\src\\components\\ShowProfile\\styles.ts":"26","D:\\Syncro\\Zeitplan\\web\\src\\components\\FormProfile\\index.tsx":"27","D:\\Syncro\\Zeitplan\\web\\src\\components\\FormProfile\\styles.ts":"28"},{"size":265,"mtime":1613922946939,"results":"29","hashOfConfig":"30"},{"size":343,"mtime":1614784536442,"results":"31","hashOfConfig":"30"},{"size":628,"mtime":1614944961832,"results":"32","hashOfConfig":"30"},{"size":781,"mtime":1614784216594,"results":"33","hashOfConfig":"30"},{"size":1341,"mtime":1614881602982,"results":"34","hashOfConfig":"30"},{"size":650,"mtime":1614812734535,"results":"35","hashOfConfig":"30"},{"size":780,"mtime":1615209363521,"results":"36","hashOfConfig":"30"},{"size":963,"mtime":1614951358651,"results":"37","hashOfConfig":"30"},{"size":1771,"mtime":1615208883917,"results":"38","hashOfConfig":"30"},{"size":1703,"mtime":1614950088917,"results":"39","hashOfConfig":"30"},{"size":2965,"mtime":1614950547205,"results":"40","hashOfConfig":"30"},{"size":1281,"mtime":1614880220376,"results":"41","hashOfConfig":"30"},{"size":113,"mtime":1614025221050,"results":"42","hashOfConfig":"30"},{"size":831,"mtime":1614784039035,"results":"43","hashOfConfig":"30"},{"size":2605,"mtime":1614864238594,"results":"44","hashOfConfig":"30"},{"size":236,"mtime":1614784425487,"results":"45","hashOfConfig":"30"},{"size":2252,"mtime":1614964570950,"results":"46","hashOfConfig":"30"},{"size":1151,"mtime":1614964917982,"results":"47","hashOfConfig":"30"},{"size":762,"mtime":1614944885360,"results":"48","hashOfConfig":"30"},{"size":1196,"mtime":1614881132561,"results":"49","hashOfConfig":"30"},{"size":446,"mtime":1614944920906,"results":"50","hashOfConfig":"30"},{"size":256,"mtime":1614944409310,"results":"51","hashOfConfig":"30"},{"size":1687,"mtime":1614964740103,"results":"52","hashOfConfig":"30"},{"size":1319,"mtime":1614946056977,"results":"53","hashOfConfig":"30"},{"size":960,"mtime":1614947827839,"results":"54","hashOfConfig":"30"},{"size":780,"mtime":1614948723049,"results":"55","hashOfConfig":"30"},{"size":3003,"mtime":1614962058423,"results":"56","hashOfConfig":"30"},{"size":1017,"mtime":1614952030035,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"17skgak",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"D:\\Syncro\\Zeitplan\\web\\src\\index.tsx",[],[],"D:\\Syncro\\Zeitplan\\web\\src\\App.tsx",[],"D:\\Syncro\\Zeitplan\\web\\src\\Routes\\index.tsx",[],"D:\\Syncro\\Zeitplan\\web\\src\\pages\\Home\\index.tsx",[],"D:\\Syncro\\Zeitplan\\web\\src\\pages\\Home\\styles.ts",[],"D:\\Syncro\\Zeitplan\\web\\src\\styles\\globaStyle.ts",[],"D:\\Syncro\\Zeitplan\\web\\src\\components\\InputText\\index.tsx",[],"D:\\Syncro\\Zeitplan\\web\\src\\components\\InputText\\styles.ts",[],[],"D:\\Syncro\\Zeitplan\\web\\src\\components\\Login\\index.tsx",[],"D:\\Syncro\\Zeitplan\\web\\src\\components\\Login\\styles.ts",[],"D:\\Syncro\\Zeitplan\\web\\src\\components\\Register\\index.tsx",[],"D:\\Syncro\\Zeitplan\\web\\src\\components\\Register\\styles.ts",[],"D:\\Syncro\\Zeitplan\\web\\src\\services\\api.ts",[],"D:\\Syncro\\Zeitplan\\web\\src\\Routes\\AlteredRoute.tsx",["120"],"/* eslint-disable react/prop-types */\nimport React from 'react';\nimport {\n  RouteProps as RouteDOMProps,\n  Route as ReactDOMRoute,\n  Redirect,\n} from 'react-router-dom';\nimport { userAuth } from '../hooks/auth';\n\ninterface RouteProps extends RouteDOMProps {\n  isPrivate?: boolean;\n  component: React.ComponentType;\n}\n\nconst Route: React.FC<RouteProps> = ({\n  isPrivate = false,\n  component: Component,\n  ...rest\n}) => {\n  const { user } = userAuth();\n\n  return (\n    <ReactDOMRoute\n      {...rest}\n      render={({ location }) => {\n        return isPrivate === !!user ? (\n          <Component />\n        ) : (\n          <Redirect\n            to={{\n              pathname: isPrivate ? '/' : '/dashboard',\n              state: { from: location },\n            }}\n          />\n        );\n      }}\n    />\n  );\n};\n\nexport default Route;\n","D:\\Syncro\\Zeitplan\\web\\src\\hooks\\auth.tsx",[],"D:\\Syncro\\Zeitplan\\web\\src\\hooks\\index.tsx",[],"D:\\Syncro\\Zeitplan\\web\\src\\pages\\Dashboard\\index.tsx",["121","122"],"import React, { useEffect, useState } from 'react';\nimport {\n  DashboardContainer,\n  DashboardHome,\n  DashboardHomeContainer,\n  DashboardHomeContainerTable,\n} from './styles';\nimport MenuContainer from '../../components/Menu';\nimport { userAuth } from '../../hooks/auth';\nimport api from '../../services/api';\n\ninterface User {\n  id: string;\n  username: string;\n  name: string;\n  email: string;\n  description: string;\n  age: number;\n}\n\nconst Dashboard: React.FC = () => {\n  const { signOut, user } = userAuth();\n  const [data, setData] = useState([]);\n  const [key, setKey] = useState(false);\n\n  useEffect(() => {\n    // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n    async function LoadUsers() {\n      try {\n        await api.get('/user').then(response => {\n          setData(response.data);\n          console.log(response.data);\n        });\n      } catch (err) {\n        console.log(err.message);\n      }\n    }\n\n    LoadUsers();\n  }, [key]);\n\n  const renderRows = (): any => {\n    return data !== null\n      ? data.map((user: User) => (\n          <tr key={user.id}>\n            <td>{user.username}</td>\n            <td>{user.name}</td>\n            <td>{user.email}</td>\n            <td>{user.description}</td>\n          </tr>\n        ))\n      : null;\n  };\n\n  return (\n    <DashboardContainer>\n      <MenuContainer singOut={signOut} id={user.id} />\n      <DashboardHome>\n        <DashboardHomeContainer>\n          <div>\n            <h1>{user.username}</h1>\n          </div>\n          <hr />\n          <DashboardHomeContainerTable>\n            <table>\n              <thead>\n                <tr>\n                  <th>Username</th>\n                  <th>Name</th>\n                  <th>Email</th>\n                  <th>description</th>\n                </tr>\n              </thead>\n              <tbody>{renderRows()}</tbody>\n            </table>\n          </DashboardHomeContainerTable>\n        </DashboardHomeContainer>\n      </DashboardHome>\n    </DashboardContainer>\n  );\n};\n\n// private String id;\n// private String title;\n// private String sinopse;\n// private String year;\n// private long classification;\n// private String imageUrl;\n// private String trailerUrl;\n// private String category;\n\nexport default Dashboard;\n","D:\\Syncro\\Zeitplan\\web\\src\\pages\\Dashboard\\styles.ts",[],"D:\\Syncro\\Zeitplan\\web\\src\\components\\Menu\\index.tsx",["123"],"import React, { useState } from 'react';\nimport {\n  LogoContainer,\n  MenuContainer,\n  MenuItens,\n  SingOutButton,\n} from './styles';\nimport film from '../../assets/images/film.svg';\n\ninterface MenuProps {\n  singOut: () => void;\n  id: string;\n}\n\nconst Menu = (props: MenuProps): JSX.Element => {\n  return (\n    <MenuContainer>\n      <LogoContainer>\n        <img src={film} alt=\"logo image\" />\n        <h1>Kinemathek</h1>\n      </LogoContainer>\n      <MenuItens>\n        <a href=\"/\">Home</a>\n        <a href=\"/movies\">Movies</a>\n        <a href={`/perfil/${props.id}`}>Perfil</a>\n        <a href=\"/find\">Pesquisar</a>\n        <SingOutButton onClick={() => props.singOut()}>Sair</SingOutButton>\n      </MenuItens>\n    </MenuContainer>\n  );\n};\n\nexport default Menu;\n","D:\\Syncro\\Zeitplan\\web\\src\\components\\Menu\\styles.ts",[],"D:\\Syncro\\Zeitplan\\web\\src\\pages\\Movies\\index.tsx",[],"D:\\Syncro\\Zeitplan\\web\\src\\pages\\Movies\\styles.ts",[],"D:\\Syncro\\Zeitplan\\web\\src\\pages\\Profile\\index.tsx",[],"D:\\Syncro\\Zeitplan\\web\\src\\pages\\Profile\\styles.ts",[],"D:\\Syncro\\Zeitplan\\web\\src\\components\\ShowProfile\\index.tsx",[],"D:\\Syncro\\Zeitplan\\web\\src\\components\\ShowProfile\\styles.ts",[],"D:\\Syncro\\Zeitplan\\web\\src\\components\\FormProfile\\index.tsx",["124"],"import React, { useCallback, useState } from 'react';\nimport { FormComponent, ShowOne, ShowDouble, ButtonUpdate } from './styles';\nimport InputText from '../InputText';\nimport api from '../../services/api';\nimport { userAuth } from '../../hooks/auth';\n\ninterface User {\n  id: string;\n  username: string;\n  name: string;\n  email: string;\n  description: string;\n  age: number;\n}\n\ninterface FormProfileProps {\n  user: User;\n  display: boolean;\n}\n\nconst FormProfile = (props: FormProfileProps): JSX.Element => {\n  const { updateUser } = userAuth();\n  const { user, display } = props;\n\n  const [name, setName] = useState(user.name);\n  const [email, setEmail] = useState(user.email);\n  const [username, setUsername] = useState(user.username);\n  const [age, setAge] = useState(String(user.age));\n  const [description, setDescription] = useState(user.description);\n\n  const handleUpdate = useCallback(async () => {\n    try {\n      const response = await api.put(`/user/${user.id}`, {\n        name,\n        email,\n        username,\n        age,\n        description,\n      });\n\n      alert('Usuário atualizado com sucesso!.');\n\n      updateUser({\n        id: user.id,\n        name,\n        email,\n        username,\n        description,\n        age: Number(age),\n      } as User);\n    } catch (err) {\n      console.log(err.message);\n      alert('Falha na atualização do usuário.');\n    }\n  }, [user, name, email, username, age, description, updateUser]);\n\n  return (\n    <FormComponent display={display}>\n      <ShowDouble>\n        <InputText\n          label=\"Username:\"\n          placeholder={user.username}\n          value={username}\n          setValue={setUsername}\n          color={false}\n          inLine={true}\n        />\n      </ShowDouble>\n      <ShowDouble>\n        <InputText\n          label=\"Nome:\"\n          placeholder={user.name}\n          value={name}\n          setValue={setName}\n          color={false}\n          inLine={true}\n        />\n        <InputText\n          label=\"Idade:\"\n          placeholder={String(user.age)}\n          value={age}\n          color={false}\n          inLine={true}\n          setValue={setAge}\n        />\n      </ShowDouble>\n\n      <ShowDouble>\n        <InputText\n          label=\"Email:\"\n          placeholder={user.email}\n          value={email}\n          setValue={setEmail}\n          color={false}\n          inLine={true}\n        />\n        {/* <InputText\n          label=\"Senha:\"\n          placeholder=\"Digite a sua nova senha.\"\n          value={password}\n          setValue={setPassword}\n          color={false}\n          inLine={true}\n        /> */}\n      </ShowDouble>\n      <ShowOne>\n        <InputText\n          label=\"Descrição:\"\n          placeholder={user.description}\n          value={description}\n          setValue={setDescription}\n          color={false}\n          inLine={false}\n        />\n      </ShowOne>\n      <ButtonUpdate onClick={handleUpdate}>Confirmar Alterações</ButtonUpdate>\n    </FormComponent>\n  );\n};\n\nexport default FormProfile;\n","D:\\Syncro\\Zeitplan\\web\\src\\components\\FormProfile\\styles.ts",[],{"ruleId":"125","severity":1,"message":"126","line":4,"column":17,"nodeType":"127","messageId":"128","endLine":4,"endColumn":30},{"ruleId":"125","severity":1,"message":"129","line":24,"column":15,"nodeType":"127","messageId":"128","endLine":24,"endColumn":21},{"ruleId":"130","severity":1,"message":"131","line":42,"column":26,"nodeType":"132","messageId":"133","endLine":42,"endColumn":29,"suggestions":"134"},{"ruleId":"125","severity":1,"message":"135","line":1,"column":17,"nodeType":"127","messageId":"128","endLine":1,"endColumn":25},{"ruleId":"125","severity":1,"message":"136","line":33,"column":13,"nodeType":"127","messageId":"128","endLine":33,"endColumn":21},"@typescript-eslint/no-unused-vars","'RouteDOMProps' is defined but never used.","Identifier","unusedVar","'setKey' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["137","138"],"'useState' is defined but never used.","'response' is assigned a value but never used.",{"messageId":"139","fix":"140","desc":"141"},{"messageId":"142","fix":"143","desc":"144"},"suggestUnknown",{"range":"145","text":"146"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"145","text":"147"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[1001,1004],"unknown","never"]